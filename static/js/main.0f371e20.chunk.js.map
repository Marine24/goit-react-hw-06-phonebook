{"version":3,"sources":["transition/items.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Phonebook/Phonebook.module.css","redux/types.js","redux/selector.js","components/ContactForm/ContactForm.jsx","redux/phoneActions.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","components/App.jsx","redux/contactReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/ContactItem/ContactItem.module.css"],"names":["module","exports","getContacts","store","PhoneBook","contacts","getFilter","filter","getFiltredContacts","createSelector","filtred","contact","name","toLowerCase","includes","ContactForm","state","number","showError","message","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onAddContact","find","setTimeout","id","generateID","this","onSubmit","className","style","contactForm","htmlFor","type","placeholder","onChange","formBtn","CSSTransition","in","unmountOnExit","timeout","classNames","error_message","Component","connect","selector","dispatch","types","payload","contactAction","ContactItem","onDeleteContact","contactItem","contact_name","contact_number","onClick","listBtn","TransitionGroup","component","contactList","map","el","key","transition","onChangeFilter","styles","filter_form","title","filterInput","appear","length","fade","App","reducer","combineReducers","rootReducer","contactReducer","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f371e20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"items_enter__22n_h\",\"enterActive\":\"items_enterActive__WLmmZ\",\"exit\":\"items_exit__1IlRo\",\"exitActive\":\"items_exitActive__awcf9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"formBtn\":\"ContactForm_formBtn__1YZTU\",\"error_message\":\"ContactForm_error_message__-sRU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_form\":\"Filter_filter_form__349SC\",\"title\":\"Filter_title__mtLuE\",\"filterInput\":\"Filter_filterInput__u16Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"contactList\":\"ContactList_contactList__3MzlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__OJYud\"};","export default {\n  ADD_CONTACT: 'ADD_CONTACT',\n  DELETE_CONTACT: 'DELETE_CONTACT',\n  FILTER_CONTACT: 'FILTER_CONTACT',\n};\n","import { createSelector } from 'reselect';\n\nexport const getContacts = store => store.PhoneBook.contacts;\n\nexport const getFilter = store => store.PhoneBook.filter;\n\nexport const getFiltredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filtred) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtred.toLowerCase()),\n    ),\n);\n","import React, { Component } from 'react';\nimport generateID from 'uuid/v4';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport T from 'prop-types';\nimport * as contactAction from '../../redux/phoneActions';\nimport style from './ContactForm.module.css';\nimport * as selector from '../../redux/selector';\nimport '../../transition/alert.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    showError: false,\n    message: '',\n  };\n\n  static propTypes = {\n    onAddContact: T.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { contacts, onAddContact } = this.props;\n    const isInContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isInContact) {\n      this.setState(() => ({\n        message: `${name} is already in your contacts`,\n        showError: true,\n      }));\n      setTimeout(() => {\n        this.setState({ showError: false });\n      }, 2500);\n      return;\n    }\n    if (name && number) {\n      onAddContact({\n        name,\n        number,\n        id: generateID(),\n      });\n    } else {\n      this.setState(() => ({\n        message: `One of the fields is empty!`,\n        showError: true,\n      }));\n      setTimeout(() => {\n        this.setState({ showError: false });\n      }, 2500);\n    }\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number, showError, message } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={style.contactForm}>\n          <label htmlFor={generateID()}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor={generateID()}>\n            Number\n            <input\n              type=\"number\"\n              placeholder=\"Enter phone number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={style.formBtn}>\n            Add contact\n          </button>\n        </form>\n\n        <CSSTransition\n          in={showError}\n          unmountOnExit\n          timeout={300}\n          classNames=\"alert\"\n        >\n          <div className={style.error_message}>\n            <p>{message}</p>\n          </div>\n        </CSSTransition>\n      </>\n    );\n  }\n}\nconst mapStateToProps = store => ({\n  contacts: selector.getContacts(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: value => dispatch(contactAction.addContactAction(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import types from './types';\n\nexport const addContactAction = value => ({\n  type: types.ADD_CONTACT,\n  payload: {\n    contact: value,\n  },\n});\n\nexport const deleteContactAction = id => ({\n  type: types.DELETE_CONTACT,\n  payload: {\n    id,\n  },\n});\nexport const filterContactAction = value => ({\n  type: types.FILTER_CONTACT,\n  payload: {\n    value,\n  },\n});\n","import React from 'react';\nimport T from 'prop-types';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDeleteContact }) => (\n  <div className={style.contactItem}>\n    <p className={style.contact_name}>Contact:{name}</p>\n    <p className={style.contact_number}>{number}</p>\n    <button type=\"button\" onClick={onDeleteContact} className={style.listBtn}>\n      &#10008;\n    </button>\n  </div>\n);\n\nContactItem.propTypes = {\n  name: T.string.isRequired,\n  number: T.string.isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as selector from '../../redux/selector';\nimport * as contactAction from '../../redux/phoneActions';\n\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactList.module.css';\nimport transition from '../../transition/items.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <>\n    <TransitionGroup component=\"ul\" className={style.contactList}>\n      {contacts.map(el => (\n        <CSSTransition key={el.id} timeout={250} classNames={transition}>\n          <li className={style.contactItem}>\n            <ContactItem\n              name={el.name}\n              number={el.number}\n              onDeleteContact={() => onDeleteContact(el.id)}\n            />\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nContactList.propTypes = {\n  contacts: T.arrayOf(\n    T.shape({\n      name: T.string,\n      number: T.string,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\nconst mapStateToProps = store => ({\n  contacts: selector.getFiltredContacts(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactAction.deleteContactAction(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport T from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as selector from '../../redux/selector';\nimport * as contactAction from '../../redux/phoneActions';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className={styles.filter_form}>\n    <p className={styles.title}>Find contacts by name...</p>\n    <input\n      className={styles.filterInput}\n      type=\"text\"\n      placeholder=\"Type to filter...\"\n      value={value}\n      onChange={e => onChangeFilter(e.target.value)}\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  value: T.string.isRequired,\n  onChangeFilter: T.func.isRequired,\n};\nconst mapStateToProps = store => ({\n  filter: selector.getFilter(store),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: value => dispatch(contactAction.filterContactAction(value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport T from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport styles from './Phonebook.module.css';\nimport fade from '../../transition/items.module.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport '../../transition/alert.css';\nimport '../../transition/title.css';\nimport * as selector from '../../redux/selector';\n\nconst Phonebook = ({ contacts }) => (\n  <div>\n    <CSSTransition in timeout={500} classNames=\"title\" appear>\n      <div>\n        <h2 className={styles.title}>Phonebook</h2>\n      </div>\n    </CSSTransition>\n    <ContactForm />\n    {contacts.length > 1 && (\n      <CSSTransition timeout={250} classNames={fade}>\n        <Filter />\n      </CSSTransition>\n    )}\n\n    <ContactList />\n  </div>\n);\nPhonebook.propTypes = {\n  contacts: T.arrayOf(\n    T.shape({\n      name: T.string.isRequired,\n      number: T.string.isRequired,\n      id: T.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nconst mapStateToProps = store => ({\n  contacts: selector.getContacts(store),\n});\nexport default connect(mapStateToProps)(Phonebook);\n","import React from 'react';\nimport Phonebook from './Phonebook/Phonebook';\n\nconst App = () => <Phonebook />;\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport types from './types';\n\nconst contactReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD_CONTACT:\n      return [payload.contact, ...state];\n\n    case types.DELETE_CONTACT:\n      return state.filter(contact => contact.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.FILTER_CONTACT:\n      return payload.value;\n    default:\n      return state;\n  }\n};\nconst reducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer';\n\nconst rootReducer = combineReducers({\n  PhoneBook: contactReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"ContactItem_listBtn__23lin\",\"contactItem\":\"ContactItem_contactItem__5eHQm\",\"contact_name\":\"ContactItem_contact_name__2ssgH\",\"contact_number\":\"ContactItem_contact_number__3ySDE\"};"],"sourceRoot":""}